=============================================================
from collections import defaultdict
def count_default(x):
    count_dict = defaultdict(int)
    for ele in x:
        count_dict[ele] += 1
    return count_dict
ele = ['a','b','a','c','b','b','d']
count_default(ele)

# Output: defaultdict(int, {'a': 2, 'b': 3, 'c': 1, 'd': 1})
=============================================================
# namedtuples

from collections import namedtuple

Vector3 = namedtuple('Vector', ['x', 'y', 'z'])

vec = Vector3(1, 2, 3)
vec.x, vec.y, vec.z

# Output: 1 2 3

def tfunc(a,b,c):
    print(a,b,c)
tfunc(*vec)

# Output: (1, 2, 3)
================================================
<= denotes whether all elements of the first set
is in the second
aset <= anotherset
================================================
# decimal to binary conversion function
# given a decimal number n 

binary = bin(n).replace("0b", "")

type(n): int, type(binary): str
=========================================
# pop():
numbers = [1, 2, 3, 4, 5]
result = []

while numbers:
    result.append(10*numbers.pop(0))

print(result)
=========================================
# runtime calculation
import time

n_trials = 1000

result = []

for _ in range(n_trials):
    t_0 = time.time()
    # 
    #   code to test
    #
    t_elapsed = time.time() - t_0
    result.append(t_elapsed)

print(result)
print(sum(result) / len(result))
=========================================
string = string.replace(substr1, substr2)
=========================================
# 5*5 matrix input
matrix = []

for i in range(5):
    row = list(map(int, input().split()))
    matrix.append(row)
    
print(matrix[4][4])
=========================================
import math

def ncr(n, r):
    f = math.factorial
    return f(n) // f(r) // f(n-r)
    
print(ncr(5,3))
=========================================
